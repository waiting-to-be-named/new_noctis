# Generated by Django 4.2.7 on 2025-08-05 16:08

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('viewer', '0007_userprofile_attachedstudy_studycomparison'),
    ]

    operations = [
        migrations.AddField(
            model_name='aianalysis',
            name='model_version',
            field=models.CharField(default='v1.0', max_length=50),
        ),
        migrations.AddField(
            model_name='aianalysis',
            name='processing_time',
            field=models.FloatField(default=0.0),
        ),
        migrations.AlterField(
            model_name='aianalysis',
            name='analysis_type',
            field=models.CharField(choices=[('chest_xray', 'Chest X-Ray Analysis'), ('ct_lung', 'CT Lung Analysis'), ('bone_fracture', 'Bone Fracture Detection'), ('brain_mri', 'Brain MRI Analysis'), ('cardiac_analysis', 'Cardiac Analysis'), ('general', 'General Analysis'), ('pneumonia_detection', 'Pneumonia Detection'), ('tumor_detection', 'Tumor Detection'), ('vessel_analysis', 'Vessel Analysis')], max_length=50),
        ),
        migrations.CreateModel(
            name='VolumeRendering',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rendering_type', models.CharField(choices=[('mip', 'Maximum Intensity Projection'), ('minip', 'Minimum Intensity Projection'), ('average', 'Average Intensity Projection'), ('volume', 'Volume Rendering'), ('surface', 'Surface Rendering'), ('bone_3d', 'Bone 3D Reconstruction'), ('angiogram', 'Angiogram Reconstruction'), ('cardiac_4d', 'Cardiac 4D Reconstruction'), ('neurological', 'Neurological Reconstruction'), ('orthopedic', 'Orthopedic Reconstruction'), ('dental', 'Dental 3D Reconstruction')], max_length=20)),
                ('rendering_parameters', models.JSONField()),
                ('volume_data', models.TextField()),
                ('opacity_function', models.JSONField(default=dict)),
                ('color_function', models.JSONField(default=dict)),
                ('threshold_values', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('series', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='volume_renderings', to='viewer.dicomseries')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SmartMeasurement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('measurement_type', models.CharField(choices=[('distance', 'Distance Measurement'), ('area', 'Area Measurement'), ('volume', 'Volume Measurement'), ('angle', 'Angle Measurement'), ('hounsfield', 'Hounsfield Units'), ('density', 'Density Measurement'), ('organ_volume', 'Organ Volume'), ('lesion_size', 'Lesion Size')], max_length=20)),
                ('coordinates', models.JSONField()),
                ('value', models.FloatField()),
                ('unit', models.CharField(max_length=20)),
                ('ai_detected', models.BooleanField(default=False)),
                ('confidence_score', models.FloatField(blank=True, null=True)),
                ('anatomical_structure', models.CharField(blank=True, max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('image', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='smart_measurements', to='viewer.dicomimage')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OrthopedicAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('joint_type', models.CharField(choices=[('knee', 'Knee Joint'), ('hip', 'Hip Joint'), ('shoulder', 'Shoulder Joint'), ('elbow', 'Elbow Joint'), ('wrist', 'Wrist Joint'), ('ankle', 'Ankle Joint'), ('spine', 'Spinal Joints'), ('temporomandibular', 'TMJ')], max_length=20)),
                ('joint_space_measurements', models.JSONField(default=dict)),
                ('cartilage_analysis', models.JSONField(default=dict)),
                ('bone_quality_analysis', models.JSONField(default=dict)),
                ('alignment_analysis', models.JSONField(default=dict)),
                ('arthritis_assessment', models.JSONField(default=dict)),
                ('implant_analysis', models.JSONField(default=dict)),
                ('range_of_motion', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('series', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='orthopedic_analyses', to='viewer.dicomseries')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='NeurologicalAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brain_segmentation', models.JSONField(default=dict)),
                ('lesion_detection', models.JSONField(default=list)),
                ('brain_volume_analysis', models.JSONField(default=dict)),
                ('white_matter_analysis', models.JSONField(default=dict)),
                ('vascular_analysis', models.JSONField(default=dict)),
                ('atrophy_analysis', models.JSONField(default=dict)),
                ('symmetry_analysis', models.JSONField(default=dict)),
                ('hemorrhage_detection', models.JSONField(default=list)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('series', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='neurological_analyses', to='viewer.dicomseries')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CardiacAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cardiac_phase', models.CharField(choices=[('systole', 'Systolic Phase'), ('diastole', 'Diastolic Phase'), ('full_cycle', 'Full Cardiac Cycle')], max_length=20)),
                ('ejection_fraction', models.FloatField(blank=True, null=True)),
                ('wall_motion_analysis', models.JSONField(default=dict)),
                ('chamber_volumes', models.JSONField(default=dict)),
                ('valve_analysis', models.JSONField(default=dict)),
                ('perfusion_data', models.JSONField(default=dict)),
                ('coronary_calcium_score', models.FloatField(blank=True, null=True)),
                ('rhythm_analysis', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('series', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='cardiac_analyses', to='viewer.dicomseries')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='BoneReconstruction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bone_type', models.CharField(choices=[('skull', 'Skull Reconstruction'), ('spine', 'Spine Reconstruction'), ('pelvis', 'Pelvis Reconstruction'), ('ribs', 'Rib Cage Reconstruction'), ('long_bones', 'Long Bones Reconstruction'), ('joints', 'Joint Reconstruction'), ('dental', 'Dental/Maxillofacial'), ('fracture_analysis', 'Fracture Analysis')], max_length=20)),
                ('reconstruction_data', models.TextField()),
                ('fracture_detected', models.BooleanField(default=False)),
                ('fracture_locations', models.JSONField(default=list)),
                ('bone_density_analysis', models.JSONField(default=dict)),
                ('hounsfield_thresholds', models.JSONField(default=dict)),
                ('surgical_planning_data', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('series', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bone_reconstructions', to='viewer.dicomseries')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AngiogramAnalysis',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vessel_type', models.CharField(choices=[('coronary', 'Coronary Arteries'), ('cerebral', 'Cerebral Vessels'), ('pulmonary', 'Pulmonary Vessels'), ('renal', 'Renal Vessels'), ('peripheral', 'Peripheral Vessels'), ('aorta', 'Aortic Analysis'), ('carotid', 'Carotid Arteries'), ('venous', 'Venous System')], max_length=20)),
                ('vessel_tree_data', models.TextField()),
                ('stenosis_detected', models.BooleanField(default=False)),
                ('stenosis_locations', models.JSONField(default=list)),
                ('vessel_measurements', models.JSONField(default=dict)),
                ('contrast_analysis', models.JSONField(default=dict)),
                ('flow_analysis', models.JSONField(default=dict)),
                ('ai_confidence_score', models.FloatField(default=0.0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('series', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='angiogram_analyses', to='viewer.dicomseries')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='AIChat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message_type', models.CharField(choices=[('user', 'User Message'), ('ai', 'AI Response'), ('system', 'System Message')], max_length=10)),
                ('message', models.TextField()),
                ('ai_confidence', models.FloatField(blank=True, null=True)),
                ('metadata', models.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('context_image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='viewer.dicomimage')),
                ('context_study', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='viewer.dicomstudy')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ai_chats', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='MPRReconstruction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reconstruction_type', models.CharField(choices=[('axial', 'Axial View'), ('sagittal', 'Sagittal View'), ('coronal', 'Coronal View'), ('oblique', 'Oblique View'), ('curved', 'Curved MPR')], max_length=20)),
                ('slice_position', models.FloatField(default=0.0)),
                ('slice_thickness', models.FloatField(default=1.0)),
                ('reconstruction_data', models.JSONField()),
                ('image_data', models.TextField()),
                ('window_width', models.FloatField(blank=True, null=True)),
                ('window_level', models.FloatField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('series', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mpr_reconstructions', to='viewer.dicomseries')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('series', 'reconstruction_type', 'slice_position')},
            },
        ),
    ]
