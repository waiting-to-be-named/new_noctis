# Noctis PACS Nginx Configuration
# Place this file in /etc/nginx/sites-available/noctis
# Then create symlink: ln -s /etc/nginx/sites-available/noctis /etc/nginx/sites-enabled/

# Upstream configuration for Gunicorn
upstream noctis_app {
    server unix:/run/gunicorn.sock fail_timeout=0;
}

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=general:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=upload:10m rate=2r/s;
limit_req_zone $binary_remote_addr zone=api:10m rate=30r/s;

# HTTP server - redirect all traffic to HTTPS
server {
    listen 80;
    listen [::]:80;
    server_name DOMAIN_NAME_PLACEHOLDER;
    
    # ACME challenge for Let's Encrypt
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # Redirect all HTTP traffic to HTTPS
    location / {
        return 301 https://$server_name$request_uri;
    }
}

# HTTPS server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name DOMAIN_NAME_PLACEHOLDER;
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/DOMAIN_NAME_PLACEHOLDER/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/DOMAIN_NAME_PLACEHOLDER/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/DOMAIN_NAME_PLACEHOLDER/chain.pem;
    
    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Security Headers
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self' https:; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://cdnjs.cloudflare.com; style-src 'self' 'unsafe-inline' https://cdnjs.cloudflare.com https://fonts.googleapis.com; font-src 'self' https://cdnjs.cloudflare.com https://fonts.gstatic.com; img-src 'self' data: blob: https:; connect-src 'self' https:; frame-ancestors 'none';" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    
    # Logging
    access_log /var/log/noctis/nginx_access.log;
    error_log /var/log/noctis/nginx_error.log;
    
    # General Settings
    client_max_body_size 5G;  # Allow large DICOM file uploads
    client_body_timeout 3600;
    send_timeout 3600;
    proxy_read_timeout 3600;
    proxy_connect_timeout 3600;
    proxy_send_timeout 3600;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript application/javascript application/xml+rss application/json;
    gzip_disable "MSIE [1-6]\.";
    
    # Static files
    location /static/ {
        alias /var/www/noctis/static/;
        expires 30d;
        add_header Cache-Control "public, immutable";
        
        # Security headers for static files
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "DENY" always;
    }
    
    # Media files (DICOM images, etc.)
    location /media/ {
        alias /var/www/noctis/media/;
        expires 7d;
        add_header Cache-Control "private";
        
        # Restrict access to authenticated users only
        location ~ ^/media/dicom_files/ {
            internal;  # Only accessible through X-Accel-Redirect
        }
        
        # Security headers for media files
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-Frame-Options "DENY" always;
        add_header Content-Disposition "attachment" always;
    }
    
    # API endpoints with rate limiting
    location /api/ {
        limit_req zone=api burst=50 nodelay;
        limit_req_status 429;
        
        proxy_pass http://noctis_app;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        proxy_buffering off;
        
        # CORS headers handled by Django
    }
    
    # Upload endpoints with specific rate limiting
    location ~ ^/(upload|viewer/upload|worklist/upload)/ {
        limit_req zone=upload burst=5 nodelay;
        limit_req_status 429;
        
        proxy_pass http://noctis_app;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        
        # Disable buffering for uploads
        proxy_buffering off;
        proxy_request_buffering off;
        
        # Extended timeouts for large file uploads
        proxy_read_timeout 3600;
        proxy_connect_timeout 3600;
        proxy_send_timeout 3600;
    }
    
    # WebSocket support (if needed for real-time features)
    location /ws/ {
        proxy_pass http://noctis_app;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_redirect off;
    }
    
    # Django admin with additional protection
    location /admin/ {
        # Restrict admin access to specific IPs (uncomment and modify as needed)
        # allow 192.168.1.0/24;
        # allow 10.0.0.0/8;
        # deny all;
        
        limit_req zone=general burst=5 nodelay;
        
        proxy_pass http://noctis_app;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_redirect off;
    }
    
    # Main application
    location / {
        limit_req zone=general burst=20 nodelay;
        
        proxy_pass http://noctis_app;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_redirect off;
        
        # Security headers
        proxy_hide_header X-Powered-By;
        proxy_hide_header Server;
    }
    
    # Block access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Block access to backup files
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Health check endpoint
    location /health/ {
        access_log off;
        proxy_pass http://noctis_app;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
    }
    
    # Monitoring endpoint (restrict access)
    location /nginx_status {
        stub_status on;
        allow 127.0.0.1;
        deny all;
    }
}

# DICOM Server Configuration (if using Nginx as DICOM proxy)
# stream {
#     upstream dicom_backend {
#         server 127.0.0.1:11112;  # Local DICOM server port
#     }
#     
#     server {
#         listen 104;  # Standard DICOM port
#         proxy_pass dicom_backend;
#         proxy_timeout 3600s;
#         proxy_connect_timeout 60s;
#     }
# }